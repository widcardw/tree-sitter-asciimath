module.exports = {
  // Binary operators
  plus: ($) => "+",
  minus: ($) => "-",
  cdot: ($) => choice("cdot", "*"),
  times: $ => choice("times", 'xx'),
  equals: ($) => "=",
  lt: ($) => "<",
  gt: ($) => ">",
  le: ($) => "<=",
  ge: ($) => ">=",
  ne: ($) => "!=",
  cong: ($) => "~=",
  approx: $ => '~~',
  equiv: $ => '-=',
  pm: ($) => choice('+-', "pm"),
  mp: ($) => choice('-+', "mp"),
  sim: ($) => '~',

  // Advanced binary operators
  star: $ => choice("star", '***'),
  ast: $ => choice('ast', '**'),
  slash: $ => choice("slash", '//'),
  backslash: $ => choice("backslash", '\\\\'),
  setminus: $ => "setminus",
  ltimes: ($) => choice("ltimes", '|><'),
  rtimes: ($) => choice("rtimes", '><|'),
  bowtie: ($) => choice("bowtie", '|><|'),
  div: ($) => choice("div", '-:'),
  circ: ($) => choice("circ", '@'),
  oplus: ($) => choice("oplus", 'o+'),
  otimes: ($) => choice("otimes", 'ox'),
  odot: ($) => choice("odot", 'o.'),
  ll: ($) => choice("ll", '<<'),
  gg: ($) => choice("gg", '>>'),
  prec_than: ($) => '-<',
  prec_than_eq: ($) => '-<=',
  succ_than: ($) => '>-',
  succ_than_eq: ($) => '>-=',
  in: ($) => 'in',
  not_in: ($) => '!in',
  sub: ($) => 'sub',
  sup: ($) => 'sup',
  sub_eq: ($) => 'sube',
  sup_eq: ($) => 'supe',
  coloneqq: ($) => ':=',
  eqqcolon: ($) => '=:'
};
