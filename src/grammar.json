{
  "name": "asciimath",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "SYMBOL",
            "name": "multi_linebreak"
          }
        ]
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "binary_frac"
        },
        {
          "type": "SYMBOL",
          "name": "concatenation"
        },
        {
          "type": "SYMBOL",
          "name": "intermediate_expression"
        }
      ]
    },
    "number_symbol": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z]+"
    },
    "if": {
      "type": "STRING",
      "value": "if"
    },
    "otherwise": {
      "type": "STRING",
      "value": "otherwise"
    },
    "else": {
      "type": "STRING",
      "value": "else"
    },
    "alpha": {
      "type": "STRING",
      "value": "alpha"
    },
    "beta": {
      "type": "STRING",
      "value": "beta"
    },
    "gamma": {
      "type": "STRING",
      "value": "gamma"
    },
    "delta": {
      "type": "STRING",
      "value": "delta"
    },
    "epsilon": {
      "type": "STRING",
      "value": "epsilon"
    },
    "zeta": {
      "type": "STRING",
      "value": "zeta"
    },
    "eta": {
      "type": "STRING",
      "value": "eta"
    },
    "theta": {
      "type": "STRING",
      "value": "theta"
    },
    "iota": {
      "type": "STRING",
      "value": "iota"
    },
    "kappa": {
      "type": "STRING",
      "value": "kappa"
    },
    "lambda": {
      "type": "STRING",
      "value": "lambda"
    },
    "mu": {
      "type": "STRING",
      "value": "mu"
    },
    "nu": {
      "type": "STRING",
      "value": "nu"
    },
    "xi": {
      "type": "STRING",
      "value": "xi"
    },
    "omicron": {
      "type": "STRING",
      "value": "omicron"
    },
    "pi": {
      "type": "STRING",
      "value": "pi"
    },
    "rho": {
      "type": "STRING",
      "value": "rho"
    },
    "sigma": {
      "type": "STRING",
      "value": "sigma"
    },
    "tau": {
      "type": "STRING",
      "value": "tau"
    },
    "upsilon": {
      "type": "STRING",
      "value": "upsilon"
    },
    "phi": {
      "type": "STRING",
      "value": "phi"
    },
    "chi": {
      "type": "STRING",
      "value": "chi"
    },
    "psi": {
      "type": "STRING",
      "value": "psi"
    },
    "omega": {
      "type": "STRING",
      "value": "omega"
    },
    "Alpha": {
      "type": "STRING",
      "value": "Alpha"
    },
    "Beta": {
      "type": "STRING",
      "value": "Beta"
    },
    "Gamma": {
      "type": "STRING",
      "value": "Gamma"
    },
    "Delta": {
      "type": "STRING",
      "value": "Delta"
    },
    "Epsilon": {
      "type": "STRING",
      "value": "Epsilon"
    },
    "Zeta": {
      "type": "STRING",
      "value": "Zeta"
    },
    "Eta": {
      "type": "STRING",
      "value": "Eta"
    },
    "Theta": {
      "type": "STRING",
      "value": "Theta"
    },
    "Iota": {
      "type": "STRING",
      "value": "Iota"
    },
    "Kappa": {
      "type": "STRING",
      "value": "Kappa"
    },
    "Lambda": {
      "type": "STRING",
      "value": "Lambda"
    },
    "Mu": {
      "type": "STRING",
      "value": "Mu"
    },
    "Nu": {
      "type": "STRING",
      "value": "Nu"
    },
    "Xi": {
      "type": "STRING",
      "value": "Xi"
    },
    "Omicron": {
      "type": "STRING",
      "value": "Omicron"
    },
    "Pi": {
      "type": "STRING",
      "value": "Pi"
    },
    "Rho": {
      "type": "STRING",
      "value": "Rho"
    },
    "Sigma": {
      "type": "STRING",
      "value": "Sigma"
    },
    "Tau": {
      "type": "STRING",
      "value": "Tau"
    },
    "Upsilon": {
      "type": "STRING",
      "value": "Upsilon"
    },
    "Phi": {
      "type": "STRING",
      "value": "Phi"
    },
    "Chi": {
      "type": "STRING",
      "value": "Chi"
    },
    "Psi": {
      "type": "STRING",
      "value": "Psi"
    },
    "Omega": {
      "type": "STRING",
      "value": "Omega"
    },
    "infty": {
      "type": "STRING",
      "value": "infty"
    },
    "hbar": {
      "type": "STRING",
      "value": "hbar"
    },
    "ell": {
      "type": "STRING",
      "value": "ell"
    },
    "Re": {
      "type": "STRING",
      "value": "Re"
    },
    "Im": {
      "type": "STRING",
      "value": "Im"
    },
    "aleph": {
      "type": "STRING",
      "value": "aleph"
    },
    "nabla": {
      "type": "STRING",
      "value": "nabla"
    },
    "partial": {
      "type": "STRING",
      "value": "partial"
    },
    "forall": {
      "type": "STRING",
      "value": "forall"
    },
    "exists": {
      "type": "STRING",
      "value": "exists"
    },
    "emptyset": {
      "type": "STRING",
      "value": "emptyset"
    },
    "grad": {
      "type": "STRING",
      "value": "grad"
    },
    "del": {
      "type": "STRING",
      "value": "del"
    },
    "plus": {
      "type": "STRING",
      "value": "+"
    },
    "minus": {
      "type": "STRING",
      "value": "-"
    },
    "times": {
      "type": "STRING",
      "value": "*"
    },
    "equals": {
      "type": "STRING",
      "value": "="
    },
    "lt": {
      "type": "STRING",
      "value": "<"
    },
    "gt": {
      "type": "STRING",
      "value": ">"
    },
    "le": {
      "type": "STRING",
      "value": "<="
    },
    "ge": {
      "type": "STRING",
      "value": ">="
    },
    "ne": {
      "type": "STRING",
      "value": "!="
    },
    "approx": {
      "type": "STRING",
      "value": "~="
    },
    "pm": {
      "type": "STRING",
      "value": "pm"
    },
    "mp": {
      "type": "STRING",
      "value": "mp"
    },
    "implies": {
      "type": "STRING",
      "value": "=>"
    },
    "equiv": {
      "type": "STRING",
      "value": "<=>"
    },
    "not_implies": {
      "type": "STRING",
      "value": "=/=>"
    },
    "tilde_gt": {
      "type": "STRING",
      "value": "~>"
    },
    "dash_gt": {
      "type": "STRING",
      "value": "->"
    },
    "not_dash_gt": {
      "type": "STRING",
      "value": "-/->"
    },
    "lt_dash": {
      "type": "STRING",
      "value": "<-"
    },
    "not_lt_dash": {
      "type": "STRING",
      "value": "<-/-"
    },
    "lt_dash_gt": {
      "type": "STRING",
      "value": "<->"
    },
    "not_lt_dash_gt": {
      "type": "STRING",
      "value": "<-/->"
    },
    "lt_eq": {
      "type": "STRING",
      "value": "<=="
    },
    "not_lt_eq_gt": {
      "type": "STRING",
      "value": "<=/=>"
    },
    "forall_symbol": {
      "type": "STRING",
      "value": "AA"
    },
    "exists_symbol": {
      "type": "STRING",
      "value": "EE"
    },
    "falsum": {
      "type": "STRING",
      "value": "_|_"
    },
    "verum": {
      "type": "STRING",
      "value": "TT"
    },
    "turnstile": {
      "type": "STRING",
      "value": "|--"
    },
    "models": {
      "type": "STRING",
      "value": "|=="
    },
    "sqrt": {
      "type": "STRING",
      "value": "sqrt"
    },
    "text": {
      "type": "STRING",
      "value": "text"
    },
    "bb": {
      "type": "STRING",
      "value": "bb"
    },
    "cc": {
      "type": "STRING",
      "value": "cc"
    },
    "tt": {
      "type": "STRING",
      "value": "tt"
    },
    "fr": {
      "type": "STRING",
      "value": "fr"
    },
    "sf": {
      "type": "STRING",
      "value": "sf"
    },
    "bold": {
      "type": "STRING",
      "value": "bold"
    },
    "cal": {
      "type": "STRING",
      "value": "cal"
    },
    "frak": {
      "type": "STRING",
      "value": "frak"
    },
    "monospace": {
      "type": "STRING",
      "value": "monospace"
    },
    "mono": {
      "type": "STRING",
      "value": "mono"
    },
    "italic": {
      "type": "STRING",
      "value": "italic"
    },
    "frac": {
      "type": "STRING",
      "value": "frac"
    },
    "root": {
      "type": "STRING",
      "value": "root"
    },
    "stackrel": {
      "type": "STRING",
      "value": "stackrel"
    },
    "choose": {
      "type": "STRING",
      "value": "choose"
    },
    "atop": {
      "type": "STRING",
      "value": "atop"
    },
    "over": {
      "type": "STRING",
      "value": "over"
    },
    "factorial": {
      "type": "STRING",
      "value": "!"
    },
    "double_factorial": {
      "type": "STRING",
      "value": "!!"
    },
    "multi_linebreak": {
      "type": "PATTERN",
      "value": "(\\r?\\n){2,}"
    },
    "_whitespace": {
      "type": "PATTERN",
      "value": "\\s+|\\r?\\n|\\t"
    },
    "literal_string": {
      "type": "PREC_LEFT",
      "value": 25,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\""
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "SYMBOL",
                    "name": "unescaped_double_string_fragment"
                  },
                  "named": true,
                  "value": "string_fragment"
                },
                {
                  "type": "SYMBOL",
                  "name": "escape_sequence"
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": "\""
          }
        ]
      }
    },
    "unescaped_double_string_fragment": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^\"\\\\\\r\\n]+"
        }
      }
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu0-7]"
              },
              {
                "type": "PATTERN",
                "value": "[0-7]{1,3}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u\\{[0-9a-fA-F]+\\}"
              },
              {
                "type": "PATTERN",
                "value": "[\\r?][\\n\\u2028\\u2029]"
              }
            ]
          }
        ]
      }
    },
    "left_bracket": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "STRING",
          "value": "{:"
        },
        {
          "type": "STRING",
          "value": "(:"
        }
      ]
    },
    "right_bracket": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "STRING",
          "value": ":}"
        },
        {
          "type": "STRING",
          "value": ":)"
        }
      ]
    },
    "bracket_expr": {
      "type": "PREC",
      "value": 18,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "left_bracket"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "SYMBOL",
            "name": "right_bracket"
          }
        ]
      }
    },
    "matrix_row_expr": {
      "type": "PREC_LEFT",
      "value": 10,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "left_bracket"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                }
              ]
            }
          },
          {
            "type": "SYMBOL",
            "name": "right_bracket"
          }
        ]
      }
    },
    "matrix_expr": {
      "type": "PREC_LEFT",
      "value": 9,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "left_bracket"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "matrix_row_expr"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "STRING",
                      "value": ","
                    },
                    {
                      "type": "SYMBOL",
                      "name": "matrix_row_expr"
                    }
                  ]
                }
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "right_bracket"
          }
        ]
      }
    },
    "unary_expr": {
      "type": "PREC_LEFT",
      "value": 16,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "sqrt"
              },
              {
                "type": "SYMBOL",
                "name": "text"
              },
              {
                "type": "SYMBOL",
                "name": "bb"
              },
              {
                "type": "SYMBOL",
                "name": "cc"
              },
              {
                "type": "SYMBOL",
                "name": "tt"
              },
              {
                "type": "SYMBOL",
                "name": "fr"
              },
              {
                "type": "SYMBOL",
                "name": "sf"
              },
              {
                "type": "SYMBOL",
                "name": "bold"
              },
              {
                "type": "SYMBOL",
                "name": "cal"
              },
              {
                "type": "SYMBOL",
                "name": "frak"
              },
              {
                "type": "SYMBOL",
                "name": "monospace"
              },
              {
                "type": "SYMBOL",
                "name": "mono"
              },
              {
                "type": "SYMBOL",
                "name": "italic"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          }
        ]
      }
    },
    "binary_expr": {
      "type": "PREC_LEFT",
      "value": 17,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "frac"
              },
              {
                "type": "SYMBOL",
                "name": "root"
              },
              {
                "type": "SYMBOL",
                "name": "stackrel"
              },
              {
                "type": "SYMBOL",
                "name": "choose"
              },
              {
                "type": "SYMBOL",
                "name": "atop"
              },
              {
                "type": "SYMBOL",
                "name": "over"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          },
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          }
        ]
      }
    },
    "binary_frac": {
      "type": "PREC_LEFT",
      "value": 20,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "intermediate_expression"
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "SYMBOL",
            "name": "intermediate_expression"
          }
        ]
      }
    },
    "factorial_expr": {
      "type": "PREC_LEFT",
      "value": 24,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "double_factorial"
              },
              {
                "type": "SYMBOL",
                "name": "factorial"
              }
            ]
          }
        ]
      }
    },
    "simple_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number_symbol"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "if"
        },
        {
          "type": "SYMBOL",
          "name": "otherwise"
        },
        {
          "type": "SYMBOL",
          "name": "else"
        },
        {
          "type": "SYMBOL",
          "name": "plus"
        },
        {
          "type": "SYMBOL",
          "name": "minus"
        },
        {
          "type": "SYMBOL",
          "name": "times"
        },
        {
          "type": "SYMBOL",
          "name": "equals"
        },
        {
          "type": "SYMBOL",
          "name": "lt"
        },
        {
          "type": "SYMBOL",
          "name": "gt"
        },
        {
          "type": "SYMBOL",
          "name": "le"
        },
        {
          "type": "SYMBOL",
          "name": "ge"
        },
        {
          "type": "SYMBOL",
          "name": "ne"
        },
        {
          "type": "SYMBOL",
          "name": "approx"
        },
        {
          "type": "SYMBOL",
          "name": "pm"
        },
        {
          "type": "SYMBOL",
          "name": "mp"
        },
        {
          "type": "SYMBOL",
          "name": "infty"
        },
        {
          "type": "SYMBOL",
          "name": "hbar"
        },
        {
          "type": "SYMBOL",
          "name": "ell"
        },
        {
          "type": "SYMBOL",
          "name": "Re"
        },
        {
          "type": "SYMBOL",
          "name": "Im"
        },
        {
          "type": "SYMBOL",
          "name": "aleph"
        },
        {
          "type": "SYMBOL",
          "name": "nabla"
        },
        {
          "type": "SYMBOL",
          "name": "partial"
        },
        {
          "type": "SYMBOL",
          "name": "forall"
        },
        {
          "type": "SYMBOL",
          "name": "exists"
        },
        {
          "type": "SYMBOL",
          "name": "emptyset"
        },
        {
          "type": "SYMBOL",
          "name": "grad"
        },
        {
          "type": "SYMBOL",
          "name": "del"
        },
        {
          "type": "SYMBOL",
          "name": "alpha"
        },
        {
          "type": "SYMBOL",
          "name": "beta"
        },
        {
          "type": "SYMBOL",
          "name": "gamma"
        },
        {
          "type": "SYMBOL",
          "name": "delta"
        },
        {
          "type": "SYMBOL",
          "name": "epsilon"
        },
        {
          "type": "SYMBOL",
          "name": "zeta"
        },
        {
          "type": "SYMBOL",
          "name": "eta"
        },
        {
          "type": "SYMBOL",
          "name": "theta"
        },
        {
          "type": "SYMBOL",
          "name": "iota"
        },
        {
          "type": "SYMBOL",
          "name": "kappa"
        },
        {
          "type": "SYMBOL",
          "name": "lambda"
        },
        {
          "type": "SYMBOL",
          "name": "mu"
        },
        {
          "type": "SYMBOL",
          "name": "nu"
        },
        {
          "type": "SYMBOL",
          "name": "xi"
        },
        {
          "type": "SYMBOL",
          "name": "omicron"
        },
        {
          "type": "SYMBOL",
          "name": "pi"
        },
        {
          "type": "SYMBOL",
          "name": "rho"
        },
        {
          "type": "SYMBOL",
          "name": "sigma"
        },
        {
          "type": "SYMBOL",
          "name": "tau"
        },
        {
          "type": "SYMBOL",
          "name": "upsilon"
        },
        {
          "type": "SYMBOL",
          "name": "phi"
        },
        {
          "type": "SYMBOL",
          "name": "chi"
        },
        {
          "type": "SYMBOL",
          "name": "psi"
        },
        {
          "type": "SYMBOL",
          "name": "omega"
        },
        {
          "type": "SYMBOL",
          "name": "Alpha"
        },
        {
          "type": "SYMBOL",
          "name": "Beta"
        },
        {
          "type": "SYMBOL",
          "name": "Gamma"
        },
        {
          "type": "SYMBOL",
          "name": "Delta"
        },
        {
          "type": "SYMBOL",
          "name": "Epsilon"
        },
        {
          "type": "SYMBOL",
          "name": "Zeta"
        },
        {
          "type": "SYMBOL",
          "name": "Eta"
        },
        {
          "type": "SYMBOL",
          "name": "Theta"
        },
        {
          "type": "SYMBOL",
          "name": "Iota"
        },
        {
          "type": "SYMBOL",
          "name": "Kappa"
        },
        {
          "type": "SYMBOL",
          "name": "Lambda"
        },
        {
          "type": "SYMBOL",
          "name": "Mu"
        },
        {
          "type": "SYMBOL",
          "name": "Nu"
        },
        {
          "type": "SYMBOL",
          "name": "Xi"
        },
        {
          "type": "SYMBOL",
          "name": "Omicron"
        },
        {
          "type": "SYMBOL",
          "name": "Pi"
        },
        {
          "type": "SYMBOL",
          "name": "Rho"
        },
        {
          "type": "SYMBOL",
          "name": "Sigma"
        },
        {
          "type": "SYMBOL",
          "name": "Tau"
        },
        {
          "type": "SYMBOL",
          "name": "Upsilon"
        },
        {
          "type": "SYMBOL",
          "name": "Phi"
        },
        {
          "type": "SYMBOL",
          "name": "Chi"
        },
        {
          "type": "SYMBOL",
          "name": "Psi"
        },
        {
          "type": "SYMBOL",
          "name": "Omega"
        },
        {
          "type": "SYMBOL",
          "name": "literal_string"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "bracket_expr"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expr"
        },
        {
          "type": "SYMBOL",
          "name": "matrix_expr"
        },
        {
          "type": "SYMBOL",
          "name": "factorial_expr"
        }
      ]
    },
    "subscript": {
      "type": "PREC_LEFT",
      "value": 19,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          },
          {
            "type": "STRING",
            "value": "_"
          },
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          }
        ]
      }
    },
    "superscript": {
      "type": "PREC_LEFT",
      "value": 19,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          },
          {
            "type": "STRING",
            "value": "^"
          },
          {
            "type": "SYMBOL",
            "name": "simple_expression"
          }
        ]
      }
    },
    "subscript_superscript": {
      "type": "PREC_LEFT",
      "value": 20,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              },
              {
                "type": "STRING",
                "value": "_"
              },
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              },
              {
                "type": "STRING",
                "value": "^"
              },
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              },
              {
                "type": "STRING",
                "value": "^"
              },
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              },
              {
                "type": "STRING",
                "value": "_"
              },
              {
                "type": "SYMBOL",
                "name": "simple_expression"
              }
            ]
          }
        ]
      }
    },
    "intermediate_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "subscript"
        },
        {
          "type": "SYMBOL",
          "name": "superscript"
        },
        {
          "type": "SYMBOL",
          "name": "subscript_superscript"
        },
        {
          "type": "SYMBOL",
          "name": "simple_expression"
        }
      ]
    },
    "concatenation": {
      "type": "PREC_LEFT",
      "value": 11,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "intermediate_expression"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "_whitespace"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
